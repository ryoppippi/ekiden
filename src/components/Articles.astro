---
import Article, { type ArticleProps } from "./Article.astro";
import dayjs from "dayjs";

type Props = {
  articles: ArticleProps[];
};

let initialDay = dayjs().subtract(1, "M");

let diff: number;

const _initalDay = initialDay.day();
switch (_initalDay) {
  case 0:
  case 2:
  case 4:
    diff = 1;
    break;
  case 1:
  case 3:
  case 5:
    diff = 0;
    break;
  case 6:
    diff = 2;
    break;
  default:
    /* _initalDay は never になるので、exhaustive になる */
    return _initalDay satisfies never;
}

initialDay = initialDay.add(diff, "d");
let today = initialDay;
let yesterday = initialDay.subtract(1, "M");
const articles = [];
while (initialDay.add(2, "M") >= today) {
  let article: ArticleProps = {
    opened: true,
    runner: "募集中",
    title: "記事を投稿する",
    date: today.format("YYYY-MM-DD"),
    url: `https://github.com/vim-jp/ekiden/issues/new?labels=article&template=article.yml&title=${today.format(
      "YYYY-MM-DD",
    )}`,
  };
  article =
    Astro.props.articles.find(
      ({ date }) => date === today.format("YYYY-MM-DD"),
    ) ?? article;
  article.firstDay = today.month() !== yesterday.month();
  articles.push(article);
  yesterday = today;
  today = today.add(today.day() >= 4 ? 3 : 2, "d");
}
---

{articles.map((article) => <Article {...article} />)}
